
#include "sai/sai.h"
#include "sai/input.h"
#include "sai/irq.h"

	.section	.bss

	.global	g_sai_vbl_wait_flag

g_sai_vbl_wait_flag:              ds.b 1

	.section	.text

	.macro	VBL_WAIT
0:
	tst.b	g_sai_vbl_wait_flag
	bne.s	0b
	.endm

	.global	sai_init
	.global	sai_finish

; As the C runtime startup clears work RAM and bss, some memory related to
; hardware will need initialization once more.
sai_init:
	bsr.w	sai_irq_init
	bsr.w	sai_input_init

;
; System-specific
;

#if ((SAI_TARGET == SAI_TARGET_MD) || (SAI_TARGET == SAI_TARGET_C1) || SAI_TARGET == SAI_TARGET_C2)
	bsr.w	sai_vdp_init
	bsr.w	sai_vdp_dma_init
	bsr.w	sai_vdp_spr_init
	bsr.w	sai_pal_init

	; C/C2-specific additions within the VDP block
#if SAI_TARGET == SAI_TARGET_C1 || SAI_TARGET == SAI_TARGET_C2
	bsr.w	sai_c2_io_init
	bsr.w	sai_sysc_vctrl_init
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
#endif  // SAI_TARGET

	; Enable vbl int last
	move.w	g_sai_vdp_reg_mode+2, d0
	ori.w	#VDP_MODESET2_IE0, d0
	move.w	d0, g_sai_vdp_reg_mode+2
	move.w	d0, VDP_BASE+VDP_OFFS_CTRL

#elif SAI_TARGET == SAI_TARGET_S16B || SAI_TARGET == SAI_TARGET_S18

#if SAI_TARGET == SAI_TARGET_S16B
	bsr.w	sai_s16b_io_init
#else
	bsr.w	sai_s18_io_init
	bsr.w	sai_vdp_init
	bsr.w	sai_vdp_dma_init
	bsr.w	sai_vdp_spr_init
#endif  // SAI_TARGET
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
#elif SAI_TARGET == SAI_TARGET_CPS
	bsr.w	sai_cps_io_init
	bsr.w	sai_cps_ppu_init
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
#elif SAI_TARGET == SAI_TARGET_CPS2
	bsr.w	sai_cps_ppu_init
	bsr.w	sai_cps2_obj_init
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
#elif SAI_TARGET == SAI_TARGET_ESPRADE
	bsr.w	sai_at_io_init
	bsr.w	sai_sp013_init
	bsr.w	sai_bg038_init
	; TODO: EEPROM
	bsr.w	sai_ymz_reset
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
#elif SAI_TARGET == SAI_TARGET_TATSUJIN_OH
	bsr.w	sai_toa_io_init
	bsr.w	sai_toa_text_init
	bsr.w	sai_gcu_init
	bsr.w	sai_gcu_spr_init
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
#elif SAI_TARGET == SAI_TARGET_NEOGEO
	bsr.w	sai_neo_io_init
	bsr.w	sai_pal_init
	bsr.w	sai_palcmd_init
	bsr.w	sai_neo_fix_init
	bsr.w	sai_neo_lspc_init
#endif  // SAI_TARGET
	sf	g_sai_vbl_wait_flag
	rts

; Routine for waiting for vertical blank.
	.global	sai_irq_vbl_wait
sai_irq_vbl_wait:
	VBL_WAIT
	rts

sai_finish:
;
; Synchronize to VBL
;
#if SAI_TARGET == SAI_TARGET_MD
	bsr.w	sai_vdp_spr_finish
	bsr.w	sai_pal_poll
	VBL_WAIT
	bsr.w	sai_vdp_dma_flush
	bsr.w	sai_vdp_spr_start
#elif SAI_TARGET == SAI_TARGET_C1 || SAI_TARGET == SAI_TARGET_C2
	bsr.w	sai_vdp_spr_finish
	VBL_WAIT
	bsr.w	sai_sysc_vctrl_on_vbl
	bsr.w	sai_palcmd_poll
	bsr.w	sai_vdp_dma_flush
	bsr.w	sai_vdp_spr_start
#elif SAI_TARGET == SAI_TARGET_S16B || SAI_TARGET == SAI_TARGET_S18
	VBL_WAIT
	bsr.w	sai_palcmd_poll
#elif SAI_TARGET == SAI_TARGET_CPS
	bsr.w	sai_cps_obj_finish
	bsr.w	sai_palcmd_poll
	bsr.w	sai_cps_ppu_trigger_pal_dma
	VBL_WAIT
	bsr.w	sai_cps_obj_on_vbl
#elif SAI_TARGET == SAI_TARGET_CPS2
	bsr.w	sai_cps2_obj_finish
	bsr.w	sai_palcmd_poll
	bsr.w	sai_cps_ppu_trigger_pal_dma
	VBL_WAIT
	bsr.w	sai_cps2_obj_on_vbl
#elif SAI_TARGET == SAI_TARGET_ESPRADE
	bsr.w	sai_sp013_finish
	VBL_WAIT
	bsr.w	sai_palcmd_poll
	bsr.w	sai_sp013_on_vbl
	bsr.w	sai_bg038_on_vbl
#elif SAI_TARGET == SAI_TARGET_TATSUJIN_OH
	bsr.w	sai_gcu_spr_finish
	VBL_WAIT
	bsr.w	sai_gcu_on_vbl
	bsr.w	sai_toa_text_on_vbl
	TEXT_WAIT_ACCESS d0
	bsr.w	sai_palcmd_poll
#elif SAI_TARGET == SAI_TARGET_NEOGEO
	bsr.b	sai_irq_vbl_wait
	; TODO: Sprites on VBL
	bsr.w	sai_palcmd_poll
#endif  // SAI_TARGET

	; Load the wait flag for the next frame.
	st	g_sai_vbl_wait_flag

;
; I/O Poll
;
	bsr.w	sai_input_pre_poll
#if SAI_TARGET == SAI_TARGET_MD
	bsr.w	sai_md_pad_poll
#elif SAI_TARGET == SAI_TARGET_C1 || SAI_TARGET == SAI_TARGET_C2
	bsr.w	sai_c2_io_poll
#elif SAI_TARGET == SAI_TARGET_S16B
	bsr.w	sai_s16b_io_poll
#elif SAI_TARGET == SAI_TARGET_S18
	bsr.w	sai_s18_io_poll
#elif SAI_TARGET == SAI_TARGET_CPS
	bsr.w	sai_cps_io_poll
#elif SAI_TARGET == SAI_TARGET_CPS2
	bsr.w	sai_cps2_io_poll
#elif SAI_TARGET == SAI_TARGET_ESPRADE
	bsr.w	sai_at_io_poll
#elif SAI_TARGET == SAI_TARGET_TATSUJIN_OH
	bsr.w	sai_toa_io_poll
#elif SAI_TARGET == SAI_TARGET_NEOGEO
	bsr.w	sai_neo_io_poll
#endif  // SAI_TARGET
	bsr.w	sai_input_post_poll

	rts
