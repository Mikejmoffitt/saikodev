
#include "sai/sai.h"
#include "sai/input.h"

	.section	.text

	.global	sai_init
	.global	sai_finish

; As the C runtime startup clears work RAM and bss, some memory related to
; hardware will need initialization once more.
sai_init:
#if SAI_TARGET==SAI_TARGET_MD
	bsr.w	sai_vdp_init
	bsr.w	sai_pal_init
	bsr.w	sai_vdp_dma_init
	bsr.w	sai_vdp_spr_init
#elif SAI_TARGET==SAI_TARGET_C2
	bsr.w	sai_vdp_init
	bsr.w	sai_pal_init
	bsr.w	sai_vdp_dma_init
	bsr.w	sai_vdp_spr_init
#elif SAI_TARGET==SAI_TARGET_CPS
#elif SAI_TARGET==SAI_TARGET_CPS2
#endif  // SAI_TARGET
	rts

sai_finish:
;
; Synchronize to VBL
;
#if SAI_TARGET==SAI_TARGET_MD
	bsr.w	sai_vdp_spr_finish
	bsr.w	sai_pal_poll
	bsr.w	sai_vdp_wait_vbl
	bsr.w	sai_vdp_dma_flush
	bsr.w	sai_vdp_spr_start
#elif SAI_TARGET==SAI_TARGET_C2
	bsr.w	sai_vdp_spr_finish
	bsr.w	sai_vdp_wait_vbl
	bsr.w	sai_sysc_vctrl_on_vbl
	bsr.w	sai_pal_poll
	bsr.w	sai_vdp_dma_flush
	bsr.w	sai_vdp_spr_start
#endif  // SAI_TARGET

;
; I/O Poll
;
#if SAI_TARGET==SAI_TARGET_MD
	bsr.w	sai_md_pad_poll
#elif SAI_TARGET==SAI_TARGET_C2
	bsr.w	sai_c2_io_poll
#elif SAI_TARGET==SAI_TARGET_CPS
	bsr.w	sai_cps_io_poll
#elif SAI_TARGET==SAI_TARGET_CPS2
	bsr.w	sai_cps2_io_poll
#endif  // SAI_TARGET

	bsr.w	sai_input_update_edges
	rts
